{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANAV GANDHI\\\\Downloads\\\\MyFitness_Gym-main\\\\MyFitness_Gym-main\\\\src\\\\components\\\\Exercises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\nimport ExerciseCard from \"./ExerciseCard\"; // import Loader from \"./Loader\";\n// Pagination is used to create pages like this -> 1.2.3.4.5......100\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Exercises = _ref => {\n  _s();\n\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [exercisesPerPage] = useState(6);\n  useEffect(() => {\n    const fetchExercisesData = async () => {\n      let exercisesData = [];\n\n      if (bodyPart === \"all\") {\n        exercisesData = await fetchData(\"https://exercisedb.p.rapidapi.com/exercises\", exerciseOptions);\n      } else {\n        exercisesData = await fetchData(`https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`, exerciseOptions);\n      }\n\n      setExercises(exercisesData);\n    };\n\n    fetchExercisesData();\n  }, [bodyPart]); // Pagination\n\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: \"smooth\"\n    });\n  }; //   if (!currentExercises.length) return <Loader />;\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: \"109px\"\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: \"44px\",\n          xs: \"30px\"\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: \"107px\",\n          xs: \"50px\"\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        mt: {\n          lg: \"114px\",\n          xs: \"70px\"\n        }\n      },\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        defaultPage: 1,\n        count: Math.ceil(exercises.length / exercisesPerPage),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Exercises, \"qc/w78Pbe1Hwe7FZOf3usGVulUM=\");\n\n_c = Exercises;\nexport default Exercises;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","Exercises","exercises","setExercises","bodyPart","currentPage","setCurrentPage","exercisesPerPage","fetchExercisesData","exercisesData","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","event","value","window","scrollTo","top","behavior","mt","lg","fontSize","xs","gap","map","exercise","idx","length","Math","ceil"],"sources":["C:/Users/MANAV GANDHI/Downloads/MyFitness_Gym-main/MyFitness_Gym-main/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\n\r\nimport { exerciseOptions, fetchData } from \"../utils/fetchData\";\r\nimport ExerciseCard from \"./ExerciseCard\";\r\n// import Loader from \"./Loader\";\r\n\r\n// Pagination is used to create pages like this -> 1.2.3.4.5......100\r\nconst Exercises = ({ exercises, setExercises, bodyPart }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [exercisesPerPage] = useState(6);\r\n\r\n  useEffect(() => {\r\n    const fetchExercisesData = async () => {\r\n      let exercisesData = [];\r\n\r\n      if (bodyPart === \"all\") {\r\n        exercisesData = await fetchData(\r\n          \"https://exercisedb.p.rapidapi.com/exercises\",\r\n          exerciseOptions\r\n        );\r\n      } else {\r\n        exercisesData = await fetchData(\r\n          `https://exercisedb.p.rapidapi.com/exercises/bodyPart/${bodyPart}`,\r\n          exerciseOptions\r\n        );\r\n      }\r\n\r\n      setExercises(exercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [bodyPart]);\r\n\r\n  // Pagination\r\n  const indexOfLastExercise = currentPage * exercisesPerPage;\r\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\r\n  const currentExercises = exercises.slice(\r\n    indexOfFirstExercise,\r\n    indexOfLastExercise\r\n  );\r\n\r\n  const paginate = (event, value) => {\r\n    setCurrentPage(value);\r\n\r\n    window.scrollTo({ top: 1800, behavior: \"smooth\" });\r\n  };\r\n\r\n  //   if (!currentExercises.length) return <Loader />;\r\n\r\n  return (\r\n    <Box id=\"exercises\" sx={{ mt: { lg: \"109px\" } }} mt=\"50px\" p=\"20px\">\r\n      <Typography\r\n        variant=\"h4\"\r\n        fontWeight=\"bold\"\r\n        sx={{ fontSize: { lg: \"44px\", xs: \"30px\" } }}\r\n        mb=\"46px\"\r\n      >\r\n        Showing Results\r\n      </Typography>\r\n      <Stack\r\n        direction=\"row\"\r\n        sx={{ gap: { lg: \"107px\", xs: \"50px\" } }}\r\n        flexWrap=\"wrap\"\r\n        justifyContent=\"center\"\r\n      >\r\n        {currentExercises.map((exercise, idx) => (\r\n          <ExerciseCard key={idx} exercise={exercise} />\r\n        ))}\r\n      </Stack>\r\n      <Stack sx={{ mt: { lg: \"114px\", xs: \"70px\" } }} alignItems=\"center\">\r\n        {exercises.length > 9 && (\r\n          <Pagination\r\n            color=\"standard\"\r\n            shape=\"rounded\"\r\n            defaultPage={1}\r\n            count={Math.ceil(exercises.length / exercisesPerPage)}\r\n            page={currentPage}\r\n            onChange={paginate}\r\n            size=\"large\"\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Exercises;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,eAAvC;AAEA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,oBAA3C;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;AAEA;;;;AACA,MAAMC,SAAS,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAAEC,SAAF;IAAaC,YAAb;IAA2BC;EAA3B,CAA0C;EAC3D,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACc,gBAAD,IAAqBd,QAAQ,CAAC,CAAD,CAAnC;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMgB,kBAAkB,GAAG,YAAY;MACrC,IAAIC,aAAa,GAAG,EAApB;;MAEA,IAAIL,QAAQ,KAAK,KAAjB,EAAwB;QACtBK,aAAa,GAAG,MAAMV,SAAS,CAC7B,6CAD6B,EAE7BD,eAF6B,CAA/B;MAID,CALD,MAKO;QACLW,aAAa,GAAG,MAAMV,SAAS,CAC5B,wDAAuDK,QAAS,EADpC,EAE7BN,eAF6B,CAA/B;MAID;;MAEDK,YAAY,CAACM,aAAD,CAAZ;IACD,CAhBD;;IAkBAD,kBAAkB;EACnB,CApBQ,EAoBN,CAACJ,QAAD,CApBM,CAAT,CAJ2D,CA0B3D;;EACA,MAAMM,mBAAmB,GAAGL,WAAW,GAAGE,gBAA1C;EACA,MAAMI,oBAAoB,GAAGD,mBAAmB,GAAGH,gBAAnD;EACA,MAAMK,gBAAgB,GAAGV,SAAS,CAACW,KAAV,CACvBF,oBADuB,EAEvBD,mBAFuB,CAAzB;;EAKA,MAAMI,QAAQ,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;IACjCV,cAAc,CAACU,KAAD,CAAd;IAEAC,MAAM,CAACC,QAAP,CAAgB;MAAEC,GAAG,EAAE,IAAP;MAAaC,QAAQ,EAAE;IAAvB,CAAhB;EACD,CAJD,CAlC2D,CAwC3D;;;EAEA,oBACE,QAAC,GAAD;IAAK,EAAE,EAAC,WAAR;IAAoB,EAAE,EAAE;MAAEC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAN;IAAN,CAAxB;IAAiD,EAAE,EAAC,MAApD;IAA2D,CAAC,EAAC,MAA7D;IAAA,wBACE,QAAC,UAAD;MACE,OAAO,EAAC,IADV;MAEE,UAAU,EAAC,MAFb;MAGE,EAAE,EAAE;QAAEC,QAAQ,EAAE;UAAED,EAAE,EAAE,MAAN;UAAcE,EAAE,EAAE;QAAlB;MAAZ,CAHN;MAIE,EAAE,EAAC,MAJL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE,QAAC,KAAD;MACE,SAAS,EAAC,KADZ;MAEE,EAAE,EAAE;QAAEC,GAAG,EAAE;UAAEH,EAAE,EAAE,OAAN;UAAeE,EAAE,EAAE;QAAnB;MAAP,CAFN;MAGE,QAAQ,EAAC,MAHX;MAIE,cAAc,EAAC,QAJjB;MAAA,UAMGZ,gBAAgB,CAACc,GAAjB,CAAqB,CAACC,QAAD,EAAWC,GAAX,kBACpB,QAAC,YAAD;QAAwB,QAAQ,EAAED;MAAlC,GAAmBC,GAAnB;QAAA;QAAA;QAAA;MAAA,QADD;IANH;MAAA;MAAA;MAAA;IAAA,QATF,eAmBE,QAAC,KAAD;MAAO,EAAE,EAAE;QAAEP,EAAE,EAAE;UAAEC,EAAE,EAAE,OAAN;UAAeE,EAAE,EAAE;QAAnB;MAAN,CAAX;MAAgD,UAAU,EAAC,QAA3D;MAAA,UACGtB,SAAS,CAAC2B,MAAV,GAAmB,CAAnB,iBACC,QAAC,UAAD;QACE,KAAK,EAAC,UADR;QAEE,KAAK,EAAC,SAFR;QAGE,WAAW,EAAE,CAHf;QAIE,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAU7B,SAAS,CAAC2B,MAAV,GAAmBtB,gBAA7B,CAJT;QAKE,IAAI,EAAEF,WALR;QAME,QAAQ,EAAES,QANZ;QAOE,IAAI,EAAC;MAPP;QAAA;QAAA;QAAA;MAAA;IAFJ;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD,CA7ED;;GAAMb,S;;KAAAA,S;AA+EN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}